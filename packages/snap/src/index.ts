import type {
  OnTransactionHandler,
  OnRpcRequestHandler,
  OnInstallHandler,
  OnHomePageHandler,
} from '@metamask/snaps-sdk';
import { image, heading, panel, text, divider } from '@metamask/snaps-sdk';

import { whatToFarm } from '../../../mock/filterParamsData';
import type { PairResponseType } from '../../../mock/mockApi';
import type { UpdateRequestParams } from '../../../types/requests';
import { SnapRequestEnum } from '../../../types/requests';
import { extractValues } from '../../../utils/helper';

export const onTransaction: OnTransactionHandler = async ({ transaction }) => {
  const tokenAddress = transaction.to; // адрес токена
  const amount = transaction.value; // количество токенов

  // const response = await fetch('https://yourapi.com/token-analytics', {

  //   body: JSON.stringify({
  //     tokenAddress,
  //     amount,
  //   }),
  // });
  //
  // const analytics = await response.json();
  let err = '';
  const pairData = (await fetch(
    'https://whattofarm.io/api/v3/open/pair-stat/0x3Cb104f044dB23d6513F2A6100a1997Fa5e3F587?inv=false&route=01',
  )
    .then(async (response) => {
      if (!response.ok) {
        err = 'Network error';
      }
      return response.json();
    })
    .catch(() => {
      err = 'Network error';
    })) as PairResponseType;

  const persistedData = (await snap.request({
    method: 'snap_manageState',
    params: {
      operation: 'get',
      encrypted: false,
    },
  })) as { store: { fields: UpdateRequestParams } };

  const filteredData = persistedData?.store.fields
    ? whatToFarm.filter((item) =>
        persistedData.store.fields.includes(item.value),
      )
    : [];

  const values = extractValues(pairData, filteredData);

  return {
    content: panel([
      ...(err
        ? [text(`${err}`)]
        : [
            heading('Token Analytics'),
            text(`tokenAddress: ${tokenAddress}`),
            text(`amount: ${amount}`),
            divider(),
            ...values
              .map(({ label, value, fixedNumber }) => [
                text(
                  `${label} ${
                    fixedNumber ? parseFloat(value).toFixed(fixedNumber) : value
                  }`,
                ),
                divider(),
              ])
              .flat(),
          ]),
    ]),
  };
};

export const onRpcRequest: OnRpcRequestHandler = async ({ request }) => {
  switch (request.method) {
    case SnapRequestEnum.UpdateParams:
      return await snap.request({
        method: 'snap_manageState',
        params: {
          operation: 'update',
          newState: { store: request.params as UpdateRequestParams },
          encrypted: false,
        },
      });
    case SnapRequestEnum.RemoveParams:
      return await snap.request({
        method: 'snap_manageState',
        params: {
          operation: 'clear',
          encrypted: false,
        },
      });
    default:
      throw new Error('Method not found.');
  }
};
/**
 *
 */

export const onInstall: OnInstallHandler = async () => {
  const component = panel([
    image(
      '<svg width="245" height="76" viewBox="0 0 245 76" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
        '<path fill-rule="evenodd" clip-rule="evenodd" d="M41.4393 28.8815C42.259 28.6175 43.0517 29.266 43.0517 30.1272V45.8728C43.0517 46.734 42.2594 47.3826 41.4396 47.1186C38.2548 46.0933 35.9508 44.1356 34.6747 41.9616C34.407 41.5056 33.9333 41.195 33.4045 41.195H29.5019C28.6205 41.195 27.9706 42.0223 28.2824 42.8467C30.7287 49.3139 37.9403 54 46.4559 54C54.8714 54 62.0133 49.4235 64.5412 43.0741C64.8704 42.247 64.2196 41.4043 63.3294 41.4043H59.3818C58.8657 41.4043 58.4007 41.7004 58.1299 42.1398C56.8342 44.2422 54.5699 46.1213 51.4724 47.1186C50.6527 47.3825 49.8602 46.734 49.8602 45.8728V30.1272C49.8602 29.266 50.6527 28.6175 51.4724 28.8814C54.5699 29.8787 56.8342 31.7578 58.1299 33.8602C58.4007 34.2996 58.8657 34.5957 59.3818 34.5957H63.3294C64.2196 34.5957 64.8704 33.753 64.5412 32.9259C62.0133 26.5765 54.8714 22 46.4559 22C38.1412 22 31.0697 26.4676 28.4634 32.6987C28.1165 33.5281 28.768 34.3865 29.6671 34.3865H33.6617C34.1654 34.3865 34.6214 34.1043 34.8948 33.6814C36.2071 31.6517 38.43 29.8504 41.4393 28.8815ZM73.9141 46.4467H80.3486C85.6777 46.4467 89.0055 43.0724 89.0055 37.7782C89.0055 32.484 85.6311 29.1096 80.3486 29.1096H73.9141V46.4467ZM80.1391 42.956H78.1029V32.6003H80.0926C83.2808 32.6003 84.7934 34.3573 84.7934 37.7782C84.7934 41.1874 83.3157 42.956 80.1391 42.956ZM96.0798 46.726C92.3098 46.726 89.75 44.0498 89.75 40.3031C89.75 36.5564 92.3331 33.8802 95.9751 33.8802C99.6636 33.8802 102.212 36.4866 102.212 40.21V41.2922H93.6596C93.7061 42.8513 94.637 43.8404 96.2194 43.8404C97.3946 43.8404 98.2324 43.3284 98.5233 42.5139H102.119C101.665 44.9923 99.1865 46.726 96.0798 46.726ZM98.4767 38.8952C98.3022 37.6037 97.4179 36.8357 96.0798 36.8357C94.73 36.8357 93.8574 37.6037 93.6828 38.8952H98.4767ZM121.517 46.726C117.747 46.726 115.188 44.0498 115.188 40.3031C115.188 36.5564 117.771 33.8802 121.413 33.8802C125.101 33.8802 127.649 36.4866 127.649 40.21V41.2922H119.097C119.144 42.8513 120.074 43.8404 121.657 43.8404C122.832 43.8404 123.67 43.3284 123.961 42.5139H127.556C127.102 44.9923 124.624 46.726 121.517 46.726ZM123.914 38.8952C123.74 37.6037 122.855 36.8357 121.517 36.8357C120.168 36.8357 119.295 37.6037 119.12 38.8952H123.914ZM128.859 46.4468V34.1595H132.711L135.794 38.5927C136.434 39.5003 136.981 40.3381 137.505 41.1526V34.1595H141.368V46.4468H137.528L134.433 42.0136C133.888 41.231 133.419 40.5158 132.961 39.8179L132.722 39.4538V46.4468H128.859ZM102.656 40.3147C102.656 44.2127 105.123 46.6445 108.835 46.6445C112.256 46.6445 114.606 44.585 114.606 41.3387V39.4304H108.939V42.095H110.952C110.918 42.8629 110.231 43.3865 108.939 43.3865C107.287 43.3865 106.473 42.2928 106.473 40.2915C106.473 38.3134 107.299 37.208 108.916 37.208C109.905 37.208 110.51 37.5804 110.673 38.3832H114.49C114.269 35.6605 111.767 33.9617 108.788 33.9617C105.391 33.9617 102.656 36.2073 102.656 40.3147ZM208.397 34.1595V38.5229H212.784V34.1595H216.798V46.4468H212.784V41.8042H208.397V46.4468H204.395V34.1595H208.397ZM190.813 40.3031C190.813 44.1312 193.361 46.726 197.166 46.726C200.645 46.726 203.111 44.585 203.193 41.583H199.318C199.167 42.7815 198.434 43.5495 197.247 43.5495C195.758 43.5495 194.873 42.3161 194.873 40.3031C194.873 38.2902 195.746 37.0568 197.247 37.0568C198.434 37.0568 199.202 37.8131 199.33 38.9883H203.193C203.018 35.9747 200.586 33.8802 197.166 33.8802C193.361 33.8802 190.813 36.4866 190.813 40.3031ZM182.483 46.4468V37.4175H178.434V34.1595H190.535V37.4175H186.485V46.4468H182.483ZM170.194 34.1595L166.133 46.4468H170.519L170.985 44.8062H174.766L175.197 46.4468H179.712L175.604 34.1595H170.194ZM173.975 41.7576H171.811C172.018 40.9681 172.23 40.194 172.44 39.4221L172.442 39.4167C172.597 38.8479 172.752 38.2802 172.905 37.7084C173.277 39.0581 173.638 40.373 173.975 41.7576ZM149.471 46.4467L144.852 29.1096H149.355L151.077 36.8124C151.402 38.3483 151.705 39.8726 151.984 41.3969C152.287 39.8726 152.613 38.3483 152.973 36.8124L154.823 29.1096H158.977L160.827 36.8124C161.176 38.3367 161.502 39.8493 161.805 41.3736C162.084 39.8493 162.386 38.3367 162.712 36.8124L164.434 29.1096H168.949L164.318 46.4467H159.687L157.465 37.6851C157.285 36.9762 157.115 36.1584 156.915 35.1897L156.894 35.0903L156.874 35.1886C156.674 36.1577 156.504 36.9759 156.324 37.6851L154.114 46.4467H149.471Z" fill="#F0F0F0"/>\n' +
        '</svg>\n',
    ),
    divider(),

    text(
      'This is your analytical assistant! You can get analytics on your transactions and much more',
    ),
    text(
      'Check out more about our Snap at [Degen Watch Snap](https://aa.com/snap)',
    ),
  ]);

  await snap.request({
    method: 'snap_dialog',
    params: {
      type: 'alert',
      content: component,
    },
  });
};

export const onHomePage: OnHomePageHandler = async () => {
  const component = panel([
    image(
      '<svg width="245" height="76" viewBox="0 0 245 76" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
        '<path fill-rule="evenodd" clip-rule="evenodd" d="M41.4393 28.8815C42.259 28.6175 43.0517 29.266 43.0517 30.1272V45.8728C43.0517 46.734 42.2594 47.3826 41.4396 47.1186C38.2548 46.0933 35.9508 44.1356 34.6747 41.9616C34.407 41.5056 33.9333 41.195 33.4045 41.195H29.5019C28.6205 41.195 27.9706 42.0223 28.2824 42.8467C30.7287 49.3139 37.9403 54 46.4559 54C54.8714 54 62.0133 49.4235 64.5412 43.0741C64.8704 42.247 64.2196 41.4043 63.3294 41.4043H59.3818C58.8657 41.4043 58.4007 41.7004 58.1299 42.1398C56.8342 44.2422 54.5699 46.1213 51.4724 47.1186C50.6527 47.3825 49.8602 46.734 49.8602 45.8728V30.1272C49.8602 29.266 50.6527 28.6175 51.4724 28.8814C54.5699 29.8787 56.8342 31.7578 58.1299 33.8602C58.4007 34.2996 58.8657 34.5957 59.3818 34.5957H63.3294C64.2196 34.5957 64.8704 33.753 64.5412 32.9259C62.0133 26.5765 54.8714 22 46.4559 22C38.1412 22 31.0697 26.4676 28.4634 32.6987C28.1165 33.5281 28.768 34.3865 29.6671 34.3865H33.6617C34.1654 34.3865 34.6214 34.1043 34.8948 33.6814C36.2071 31.6517 38.43 29.8504 41.4393 28.8815ZM73.9141 46.4467H80.3486C85.6777 46.4467 89.0055 43.0724 89.0055 37.7782C89.0055 32.484 85.6311 29.1096 80.3486 29.1096H73.9141V46.4467ZM80.1391 42.956H78.1029V32.6003H80.0926C83.2808 32.6003 84.7934 34.3573 84.7934 37.7782C84.7934 41.1874 83.3157 42.956 80.1391 42.956ZM96.0798 46.726C92.3098 46.726 89.75 44.0498 89.75 40.3031C89.75 36.5564 92.3331 33.8802 95.9751 33.8802C99.6636 33.8802 102.212 36.4866 102.212 40.21V41.2922H93.6596C93.7061 42.8513 94.637 43.8404 96.2194 43.8404C97.3946 43.8404 98.2324 43.3284 98.5233 42.5139H102.119C101.665 44.9923 99.1865 46.726 96.0798 46.726ZM98.4767 38.8952C98.3022 37.6037 97.4179 36.8357 96.0798 36.8357C94.73 36.8357 93.8574 37.6037 93.6828 38.8952H98.4767ZM121.517 46.726C117.747 46.726 115.188 44.0498 115.188 40.3031C115.188 36.5564 117.771 33.8802 121.413 33.8802C125.101 33.8802 127.649 36.4866 127.649 40.21V41.2922H119.097C119.144 42.8513 120.074 43.8404 121.657 43.8404C122.832 43.8404 123.67 43.3284 123.961 42.5139H127.556C127.102 44.9923 124.624 46.726 121.517 46.726ZM123.914 38.8952C123.74 37.6037 122.855 36.8357 121.517 36.8357C120.168 36.8357 119.295 37.6037 119.12 38.8952H123.914ZM128.859 46.4468V34.1595H132.711L135.794 38.5927C136.434 39.5003 136.981 40.3381 137.505 41.1526V34.1595H141.368V46.4468H137.528L134.433 42.0136C133.888 41.231 133.419 40.5158 132.961 39.8179L132.722 39.4538V46.4468H128.859ZM102.656 40.3147C102.656 44.2127 105.123 46.6445 108.835 46.6445C112.256 46.6445 114.606 44.585 114.606 41.3387V39.4304H108.939V42.095H110.952C110.918 42.8629 110.231 43.3865 108.939 43.3865C107.287 43.3865 106.473 42.2928 106.473 40.2915C106.473 38.3134 107.299 37.208 108.916 37.208C109.905 37.208 110.51 37.5804 110.673 38.3832H114.49C114.269 35.6605 111.767 33.9617 108.788 33.9617C105.391 33.9617 102.656 36.2073 102.656 40.3147ZM208.397 34.1595V38.5229H212.784V34.1595H216.798V46.4468H212.784V41.8042H208.397V46.4468H204.395V34.1595H208.397ZM190.813 40.3031C190.813 44.1312 193.361 46.726 197.166 46.726C200.645 46.726 203.111 44.585 203.193 41.583H199.318C199.167 42.7815 198.434 43.5495 197.247 43.5495C195.758 43.5495 194.873 42.3161 194.873 40.3031C194.873 38.2902 195.746 37.0568 197.247 37.0568C198.434 37.0568 199.202 37.8131 199.33 38.9883H203.193C203.018 35.9747 200.586 33.8802 197.166 33.8802C193.361 33.8802 190.813 36.4866 190.813 40.3031ZM182.483 46.4468V37.4175H178.434V34.1595H190.535V37.4175H186.485V46.4468H182.483ZM170.194 34.1595L166.133 46.4468H170.519L170.985 44.8062H174.766L175.197 46.4468H179.712L175.604 34.1595H170.194ZM173.975 41.7576H171.811C172.018 40.9681 172.23 40.194 172.44 39.4221L172.442 39.4167C172.597 38.8479 172.752 38.2802 172.905 37.7084C173.277 39.0581 173.638 40.373 173.975 41.7576ZM149.471 46.4467L144.852 29.1096H149.355L151.077 36.8124C151.402 38.3483 151.705 39.8726 151.984 41.3969C152.287 39.8726 152.613 38.3483 152.973 36.8124L154.823 29.1096H158.977L160.827 36.8124C161.176 38.3367 161.502 39.8493 161.805 41.3736C162.084 39.8493 162.386 38.3367 162.712 36.8124L164.434 29.1096H168.949L164.318 46.4467H159.687L157.465 37.6851C157.285 36.9762 157.115 36.1584 156.915 35.1897L156.894 35.0903L156.874 35.1886C156.674 36.1577 156.504 36.9759 156.324 37.6851L154.114 46.4467H149.471Z" fill="#F0F0F0"/>\n' +
        '</svg>\n',
    ),
    divider(),
    text(
      'This is your analytical assistant! You can get analytics on your transactions and much more',
    ),
    text(
      'Check out more about our Snap at [Degen Watch Snap](https://aa.com/snap)',
    ),
  ]);

  return {
    content: component,
  };
};
